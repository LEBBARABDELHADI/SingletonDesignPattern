"Singleton solves two problems :
1- Ensure a class has a single instance
2- Provide a global access point to that instance

- Make the default constructor private, to prevent other objects from using the new operator with the Singleton class.
- Create a static creation method that acts as a constructor. 
Under the hood, this method calls the private constructor to 
create an object and saves it in a static field. All following calls to this method return the cached object. 

How to Implement
Add a private static field to the class for storing the singleton instance.

Declare a public static creation method for getting the singleton instance.

Implement “lazy initialization” inside the static method. It should create a new object on its first call and put 
it into the static field. The method should always return that instance on all subsequent calls.

Make the constructor of the class private. The static method of the class will still be able to call the constructor, 
but not the other objects.

Go over the client code and replace all direct calls to the singleton’s constructor with calls to its static creation method."


REFACTOR GURU